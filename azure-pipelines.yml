trigger:
- master

jobs:
- job: 'MacOS'
  pool:
    vmImage: 'xcode9-macos10.13'
  steps:
  - script: brew install ninja lcov
    displayName: Installing ninja build system
  - script: |
      mkdir build
      cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Coverage
      ninja -C build coverage && bash <(curl -s https://codecov.io/bash) -f build/coverage_out.info.cleaned
    displayName: Coverage
- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
    - script: choco install ninja
      displayName: Installing ninja build system
    - script: |
        set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\hostx86\x86\;%PATH%"
        mkdir build
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl
        cmake --build build --config Debug --target unit_tests.x -- -j 6
        cd build && unit_tests.x.exe
      displayName: Testing
# - job: 'Ubuntu'
#   pool:
#     vmImage: 'ubuntu-16.04'
#   steps:
#     - script: sudo apt-get install ninja-build
#       displayName: Installing ninja build system
#     - script: |
#         mkdir build
#         cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug
#         cmake --build build --config Debug --target unit_tests.x -- -j 6
#         ./build/unit_tests.x
#       displayName: Testing